
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.decomposition import PCA
from sklearn.metrics import silhouette_score

# Load dataset
# Here we simulate data similar to mall customers
from sklearn.datasets import make_blobs
X, _ = make_blobs(n_samples=200, centers=5, random_state=42)


df = pd.DataFrame(X, columns=['Feature 1', 'Feature 2'])


plt.scatter(df['Feature 1'], df['Feature 2'], s=50)
plt.title("Initial Data")
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.show()


inertia_list = []
K_range = range(1, 11)
for k in K_range:
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(X)
    inertia_list.append(kmeans.inertia_)

plt.plot(K_range, inertia_list, marker='o')
plt.title('Elbow Method')
plt.xlabel('Number of clusters (K)')
plt.ylabel('Inertia')
plt.show()

# Apply K-Meanswith optimal K
optimal_k = 5  # From elbow plot
kmeans = KMeans(n_clusters=optimal_k, random_state=42)
labels = kmeans.fit_predict(X)


plt.scatter(X[:, 0], X[:, 1], c=labels, cmap='viridis', s=50)
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], 
            c='red', marker='X', s=200, label='Centroids')
plt.title(f"K-Means Clusters (K={optimal_k})")
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.legend()
plt.show()


score = silhouette_score(X, labels)
print(f"Silhouette Score for K={optimal_k}: {score:.2f}")
